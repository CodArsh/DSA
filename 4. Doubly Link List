#include <iostream>

using namespace std;

struct node {
    node *prev;
    int item;
    node *next;
};
class DLL {
  public:
    node *start;
  public:
    DLL();
    void insertAtStart(int);
    void insertAtLast(int);
    void display();
};
DLL::DLL() {
    start = NULL;
}
void DLL::insertAtStart(int nodeValue) {
    node *n = new node;
    n->item = nodeValue;
    n->next = start;
    start = n;
    n->prev = NULL;
}

void DLL::insertAtLast(int nodeValue) {
    node *n = new node;
    node *p = new node;
    n->item = nodeValue;
    p = start;
    if(start != NULL) {
        while(p->next != NULL) {
            p = p->next;
        }
        n->prev = p;
        p->next = n;
        n->next = NULL;
    } else {
        start = n;
    }
}


void DLL::display() {
    while(start != NULL) {
        if(start->next != NULL)
            cout<<start->item<<" => ";
        else cout<<start->item;
        start = start->next;
    }
}

int main() {
    DLL d1;

    d1.insertAtStart(12);
    d1.insertAtLast(63);
    d1.insertAtLast(19);
    d1.insertAtStart(2);
    d1.insertAtStart(14);
    d1.insertAtLast(100);
    d1.display();
    return 0;
}
